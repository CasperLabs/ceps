#+STARTUP: inlineimages

* Joining Node Validator Set Tracking When Synchronizing
:PROPERTIES:
:CUSTOM_ID: joining-node-validator-set-tracking-when-synchronizing
:END:

** Summary
:PROPERTIES:
:CUSTOM_ID: summary
:END:

CEP PR: [[https://github.com/casperlabs/ceps/pull/0024][casperlabs/ceps#0024]]

A node joining the network needs a secure means of tracking the
validator set as it processes blocks. To achieve this, the validators
for the next era are to be provided in each switch block.

This is required for [[https://github.com/casperlabs/ceps/pull/1234][casperlabs/ceps#1234 (placeholder link)]] and
[[https://github.com/casperlabs/ceps/pull/9999][casperlabs/ceps#9999 (placeholder link)]].

** Motivation
:PROPERTIES:
:CUSTOM_ID: motivation
:END:

As a node gets blocks and becomes up-to-date, it will process blocks
in ascending eras. If the node has secure knowledge of the validators
in that era it can use /finality signatures/ to determine the
authenticity of block hashes. A procedure for tracking the validators
for each era is essential to securely joining the network.

** Guide-level explanation
:PROPERTIES:
:CUSTOM_ID: guide-level-explanation
:END:

Joining a network requires that a node process one block at a time
(under the current scheme). It does so until it becomes current. The
node then runs the /highway/ protocol.

The following depicts the process a joining node will take assuming an
era height of 2.  Checking will not be implemented until
[[https://github.com/casperlabs/ceps/pull/1234][casperlabs/ceps#1234]].

#+BEGIN_SRC svgbob :file images/0024/joining.svg :exports results

            Validators    Blocks       Joining Node Actions

       __
       \/   .~~~~~~~.     ,-------.
       __   : A B C :~~~~/ Era 1 /<--- Initialize validator set
       \/   `~~~~~~~'   '----+--'
       __                    |
 -+-   \/                   [#]<------ Check A/B/C sigs
  |    __                    |
       \/                   [#]<------ Check A/B/C sigs
  |    __                    |
  |    \/     .~~~~~.     ,--+----.
       __     : A B :~~~~/ Era 2 /<--- Update validator set
 |\/|  \/     `~~~~~'   '----+--'
 |  |  __                    |
       \/                   [#]<------ Check A/B sigs
 +--   __                    |
 |--   \/                   [#]<------ Check A/B sigs
 +--   __                    |
       \/   .~~~~~~~.     ,--+----.
       __   : A B D :~~~~/ Era 3 /<--- Update validator set
       \/   `~~~~~~~'   '----+--'
       __                    |
       \/                   [#]<------ Check A/B/D sigs
       __                    :
       \/                    :


  +--------+-------------------------------------+
  | Legend |                                     |
  +--------+                                     |
  |                                              |
  |                          |                   |
  |  .~~~~.                 ,+--.                |
  |  :    : Validator Set  /   /   Switch Block  |
  |  `~~~~'               '--+'                  |
  |                          |                   |
  |                                              |
  |                          |                   |
  |                         [#]    Normal Block  |
  |                          |                   |
  |                                              |
  +----------------------------------------------+


#+END_SRC

#+RESULTS:
[[file:images/0024/joining.svg]]

As we can see above, a switch block can change the validator
set. Joining nodes needs to track this.

** Reference-level explanation
:PROPERTIES:
:CUSTOM_ID: reference-level-explanation
:END:

/Synchronization mode/ is mediated by the variant
[[https://github.com/xcthulhu/casper-node/blob/0a7f9e5fd7608e2f6574c1e213bd9f5e35880af5/node/src/components/linear_chain_sync.rs#L85-L93][=linear_chain_sync::State::SyncingDescendants]]=.

We could add a field =validators= to this with type
[[https://github.com/xcthulhu/casper-node/blob/0a7f9e5fd7608e2f6574c1e213bd9f5e35880af5/types/src/auction/types.rs#L15][=types::ValidatorWeights=]] (i.e. =BTreeMap<PublicKey, U512>=). 

This would be updated as switch blocks are processed. To support this,
A field =next_era_validators= with type =BTreeMap<VID,U512>= will be added
[[https://github.com/xcthulhu/casper-node/blob/0a7f9e5fd7608e2f6574c1e213bd9f5e35880af5/node/src/components/consensus/consensus_protocol.rs#L34-L42][=consensus_protocol::EraEnd=]].

** Unresolved questions
:PROPERTIES:
:CUSTOM_ID: unresolved-questions
:END:

- While validators are now tracked, how will
  blocks be checked as discussed in the [[#guide-level-explanation][Guide-level
  explanation]]? This is addressed in [[https://github.com/casperlabs/ceps/pull/1234][casperlabs/ceps#1234]].

- What changes need to be made to transitioning from the
  =SyncingDescendants= state to ordinary validation?  This is addressed
  in [[https://github.com/casperlabs/ceps/pull/9999][casperlabs/ceps#9999]].
 
- How will we enforce the new invariants?  What is the testing strategy?

- What else is needed to support fast sync?
